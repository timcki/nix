{
  description = "tim's system config";

  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs/nixpkgs-unstable";
    nix-darwin = {
      url = "github:lnl7/nix-darwin";
      inputs.nixpkgs.follows = "nixpkgs";
    };
    home-manager = {
      url = "github:nix-community/home-manager";
      inputs.nixpkgs.follows = "nixpkgs";
    };
  };

  outputs = inputs@{ self, nix-darwin, nixpkgs, home-manager }:
  let
    # Helper function to create a darwin system configuration
    mkDarwinSystem = { system ? "aarch64-darwin", machineModule }:
      nix-darwin.lib.darwinSystem {
        inherit system;
        modules = [
          ./modules/darwin.nix
          machineModule
          home-manager.darwinModules.home-manager {
            home-manager.useGlobalPkgs = true;
            home-manager.useUserPackages = true;
            home-manager.verbose = false;
            home-manager.backupFileExtension = "bak";
            home-manager.users.tim = ./modules/home.nix;
          }
        ];
      };
  in {
    darwinConfigurations = {
      bigboi = mkDarwinSystem {
        machineModule = ./modules/machines/bigboi.nix;
      };

      small = mkDarwinSystem {
        machineModule = ./modules/machines/small.nix;
      };
    };
  };
}